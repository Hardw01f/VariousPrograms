import React, { PropTypes } from 'react';
import MediaQuery from 'react-responsive';

exports.printMsg = function () {
    console.log('This is a message to check stuff is working');
};

class Interchange extends React.Component {

    constructor(props) {
        super(props);
        this.state = {
            matchedNodeSmall: {},
            matchedNodeMedium: {},
            matchedNodeLarge: {},
        };
    }
    componentWillMount() {
        // split passes object for 3 diffrent breakpoints
        this.props.children.map((child) => {
            if (child.props.media === 'small') {
                this.setState({ matchedNodeSmall: child });
            } else if (child.props.media === 'medium') {
                this.setState({ matchedNodeMedium: child });
            } else {
                this.setState({ matchedNodeLarge: child });
            }
            return this;
        });
    }

    render() {
        return (
            <div>
                <MediaQuery minWidth={0} maxWidth={640}>
                    { this.state.matchedNodeSmall }
                </MediaQuery>
                <MediaQuery minWidth={641} maxWidth={1024}>
                    { this.state.matchedNodeMedium }
                </MediaQuery>
                <MediaQuery minWidth={1024}>
                    { this.state.matchedNodeLarge }
                </MediaQuery>
            </div>
        );
    }
}

Interchange.propTypes = {
    children: PropTypes.node.isRequired,
};

export default Interchange;
